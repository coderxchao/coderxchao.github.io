import{_ as n,c as l,a as o,o as a}from"./app-3ObzEPbj.js";const p={};function d(i,e){return a(),l("div",null,e[0]||(e[0]=[o('<p>https://pnpm.io/zh/cli/add</p><h2 id="管理-node-版本-pnpm-env" tabindex="-1"><a class="header-anchor" href="#管理-node-版本-pnpm-env"><span>管理 node 版本：pnpm env</span></a></h2><h3 id="安装-node-版本" tabindex="-1"><a class="header-anchor" href="#安装-node-版本"><span>安装 node 版本</span></a></h3><ol><li>安装并使用 node 的 lts 版本：<code>pnpm env use --global lts</code></li><li>安装并使用 node 的指定版本：<code>pnpm env use --global 18</code></li><li>安装并使用 node 的预发布版本：<code>pnpm env use --global latest</code></li><li>安装指定版本的 node，但不激活：<code>pnpm env add --global lts 18 20.0.1</code></li></ol><h3 id="移除-node-版本" tabindex="-1"><a class="header-anchor" href="#移除-node-版本"><span>移除 node 版本</span></a></h3><p>示例：</p><ol><li><code>pnpm env remove --global 14.0.0</code></li><li><code>pnpm env remove --global 14.0.0 16.2.3</code></li></ol><h3 id="查看-node-版本" tabindex="-1"><a class="header-anchor" href="#查看-node-版本"><span>查看 node 版本</span></a></h3><ol><li>查看本地安装的 node 版本：<code>pnpm env list</code></li><li>查看远程可用的 node 版本：<code>pnpm env list --remote</code></li><li>查看远程可用的 node 指定版本：<code>pnpm env list --remote 18</code></li></ol><h2 id="添加软件包-pnpm-add" tabindex="-1"><a class="header-anchor" href="#添加软件包-pnpm-add"><span>添加软件包：pnpm add</span></a></h2><ol><li>添加到生产环境 <code>dependencies</code>：<code>pnpm add &lt;packagename&gt;</code></li><li>添加到开发环境 <code>devDependencies</code>：<code>pnpm add -D &lt;packagename&gt;</code></li><li>添加到全局：<code>pnpm add -g &lt;packagename&gt;</code></li><li>添加指定版本：<code>pnpm add &lt;packagename&gt;@1.0.0</code></li><li>添加到依赖项 <code>peerDependencies</code>：<code>pnpm add --save-peer &lt;packagename&gt;</code></li></ol><h2 id="删除软件包-pnpm-remove" tabindex="-1"><a class="header-anchor" href="#删除软件包-pnpm-remove"><span>删除软件包：pnpm remove</span></a></h2><blockquote><p>Aliases：rm, uninstall, unn</p></blockquote><ol><li>从全局删除：<code>pnpm remove -g &lt;packagename&gt;</code></li><li>从开发环境删除：<code>pnpm remove -D &lt;packagename&gt;</code></li><li>从生产环境删除：<code>pnpm remove &lt;packagename&gt;</code></li></ol><h2 id="过滤-filter-或-f" tabindex="-1"><a class="header-anchor" href="#过滤-filter-或-f"><span>过滤：--filter 或 -F</span></a></h2><p><code>pnpm --filter &lt;package_selector&gt; &lt;command&gt;</code></p><p>示例：在 workspace 模式下</p><ol><li>将一个子包 1 添加到另一个子包 2：<code>pnpm --filter &lt;子包2名称&gt; add &lt;子包1名称&gt;</code></li></ol><h2 id="安装到根目录-w" tabindex="-1"><a class="header-anchor" href="#安装到根目录-w"><span>安装到根目录：-w</span></a></h2><p><code>pnpm add &lt;packagename&gt; -w</code></p><h2 id="以-workspace-模式安装-workspace" tabindex="-1"><a class="header-anchor" href="#以-workspace-模式安装-workspace"><span>以 workspace 模式安装：--workspace</span></a></h2><p><code>pnpm --filter &lt;packagename1&gt; add &lt;packagename2&gt; --workspace</code></p><h2 id="发布-publish" tabindex="-1"><a class="header-anchor" href="#发布-publish"><span>发布：publish</span></a></h2><p><code>&quot;prepublishOnly&quot;: &quot;pnpm version patch &amp;&amp; pnpm run build&quot;</code></p><blockquote><p>此命令表示当执行 pnpm publish 前先执行该脚本的内容，即先执行 pnpm version patch 修改 package. Json 中的版本号然后再执行 pnpm run build 打包，等该脚本内容执行完后才会执行 pnpm publish 真正去发布。</p></blockquote><h2 id="monorepo-开发模式总结" tabindex="-1"><a class="header-anchor" href="#monorepo-开发模式总结"><span>Monorepo 开发模式总结</span></a></h2><ol><li>Monorepo 适合用来在同一个 git 仓库中管理公司所有项目或模块包</li><li>在 packages 下面存放所有的子项目及模块</li><li>对于一些通用的 node 包直接通过 -w 指令安装到根目录下即可，在子包中可以找到根目录下安装的所有 node 包，且子包在进行打包的时候也能找到全局安装的 node 包打进去</li><li>如果子包是需要发布的 node 包而不是项目在打包配置中最好排除掉依赖的根目录 node 包，因为如果多个子模块包都可能依赖根目录下的 node 包，全都打进子模块包里面会增加模块体积</li><li>子包需要依赖另一个子包的时候最好通过 <code>--workspace</code> 模式添加依赖</li></ol>',27)]))}const t=n(p,[["render",d],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/article/pe98f082/","title":"pnpm 常用指令","lang":"zh-CN","frontmatter":{"title":"pnpm 常用指令","createTime":"2024/11/07 11:03:46","permalink":"/article/pe98f082/","tags":["pnpm","workspace"]},"headers":[{"level":2,"title":"管理 node 版本：pnpm env","slug":"管理-node-版本-pnpm-env","link":"#管理-node-版本-pnpm-env","children":[{"level":3,"title":"安装 node 版本","slug":"安装-node-版本","link":"#安装-node-版本","children":[]},{"level":3,"title":"移除 node 版本","slug":"移除-node-版本","link":"#移除-node-版本","children":[]},{"level":3,"title":"查看 node 版本","slug":"查看-node-版本","link":"#查看-node-版本","children":[]}]},{"level":2,"title":"添加软件包：pnpm add","slug":"添加软件包-pnpm-add","link":"#添加软件包-pnpm-add","children":[]},{"level":2,"title":"删除软件包：pnpm remove","slug":"删除软件包-pnpm-remove","link":"#删除软件包-pnpm-remove","children":[]},{"level":2,"title":"过滤：--filter 或 -F","slug":"过滤-filter-或-f","link":"#过滤-filter-或-f","children":[]},{"level":2,"title":"安装到根目录：-w","slug":"安装到根目录-w","link":"#安装到根目录-w","children":[]},{"level":2,"title":"以 workspace 模式安装：--workspace","slug":"以-workspace-模式安装-workspace","link":"#以-workspace-模式安装-workspace","children":[]},{"level":2,"title":"发布：publish","slug":"发布-publish","link":"#发布-publish","children":[]},{"level":2,"title":"Monorepo 开发模式总结","slug":"monorepo-开发模式总结","link":"#monorepo-开发模式总结","children":[]}],"readingTime":{"minutes":2.17,"words":650},"git":{"createdTime":1730966370000,"updatedTime":1730966370000,"contributors":[{"name":"coderchao","email":"coderchao@foxmail.com","commits":1}]},"filePathRelative":"常用指令/pnpm 常用指令.md","categoryList":[{"id":"390699","sort":10005,"name":"常用指令"}],"bulletin":false}');export{t as comp,r as data};
