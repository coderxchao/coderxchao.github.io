import{_ as o,c,a as d,o as t}from"./app-3ObzEPbj.js";const a={};function i(l,e){return t(),c("div",null,e[0]||(e[0]=[d(`<ol><li>先 <code>npm run build</code> 或 <code>yarn build</code> 将本地项目打包</li><li>确保项目根目录下有 <code>DockerFile</code> 文件，内容如下</li></ol><div class="language-dockerfile line-numbers-mode" data-ext="dockerfile" data-title="dockerfile"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>FROM nginx:latest // 以nginx镜像为基础镜像</span></span>
<span class="line"><span>EXPOSE 80 // 端口号为80</span></span>
<span class="line"><span>COPY dist  /usr/share/nginx/html // 将dist下的文件放入指定位置             </span></span>
<span class="line"><span>COPY nginx.conf /etc/nginx/nginx.conf // 将nginx的配置文件（项目本地的nginx.conf配置文件）放入容器指定位置</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><code>docker build -t &lt;imageName&gt; .</code> ：打包镜像</li><li><code>docker images</code>： 查看打包好的镜像（能看到镜像 ID）</li><li><code>docker save -o &lt;imageFile.tar&gt; &lt;image ID&gt;</code> ：将本地镜像导出成 <code>tar</code> 压缩包，<code>&lt;imageFile.tar&gt;</code> 是你要导出的 Docker 镜像的 <code>tar</code> 文件的路径和名称，<code>&lt;image ID&gt;</code> 是你要导出的 Docker 镜像的 ID。例如 <code>docker save -o ./test.tar 6a01c2c70634</code>，这样就会把指定镜像导出到项目根目录下并生成 <code>test.tar</code> 文件</li><li><code>docker load -i &lt;imageFile.tar&gt;</code>：在其他设备导入之前导出的本地镜像文件</li><li>导入镜像后通过 <code>docker images</code> 查看导入的镜像, 在 windows 下导出，然后 linux 下导入的 tar 文件，镜像的 REPOSITORY 和 TAG 都是 <code>&lt;none&gt;</code>，这时候可以通过 <code>docker tag &lt;镜像ID&gt; frontend:latest</code> 将这个导入的镜像的 REPOSITORY 和 TAG 设置为 <code>frontend</code> 和 <code>latest</code></li><li>然后在 <code>docker-compose.yaml</code> 中将要更新的容器的 <code>image</code> 的值改为 <code>frontend</code>，<code>docker stop 容器名</code>，<code>docker remove 容器名</code> 删除现有容器，最后执行 <code>docker-compose up -d 容器名</code> 即可更新</li></ol><blockquote><p>涉及到资安问题需要安装包不大于 20 M 的可通过如下命令进行分包合并处理：</p><p>split -b 20M example.tar example.tar.part 分包 cat example.tar.part* &gt; example.tar 合并</p></blockquote>`,4)]))}const s=o(a,[["render",i],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/article/bebx4o52/","title":"docker 本地打包导入导出","lang":"zh-CN","frontmatter":{"title":"docker 本地打包导入导出","createTime":"2024/11/07 14:35:04","permalink":"/article/bebx4o52/","tags":["工程化","docker"]},"headers":[],"readingTime":{"minutes":1.41,"words":424},"git":{"createdTime":1730966370000,"updatedTime":1730966370000,"contributors":[{"name":"coderchao","email":"coderchao@foxmail.com","commits":1}]},"filePathRelative":"工程化/docker 本地打包导入导出.md","categoryList":[{"id":"d994a6","sort":10004,"name":"工程化"}],"bulletin":false}');export{s as comp,r as data};
